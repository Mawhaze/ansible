---
# Get disk and partition info
- name: Get root partition device
  shell: df -h / | awk 'NR==2 {print $1}'
  register: root_device

- name: Get LVM volume group name
  shell: lvs --noheadings -o vg_name {{ root_device.stdout }} | tr -d ' '
  register: vg_name

- name: Get LVM logical volume name
  shell: lvs --noheadings -o lv_name {{ root_device.stdout }} | tr -d ' '
  register: lv_name

- name: Get physical volume device
  shell: pvs --noheadings -o pv_name | tr -d ' '
  register: pv_device

- name: Extract disk name from pv_device
  set_fact:
    disk_name: "{{ pv_device.stdout | regex_replace('([0-9]+)$', '') }}"

- name: Extract partition number from pv_device
  set_fact:
    partition_number: "{{ pv_device.stdout | regex_search('([0-9]+)$') }}"

- name: Get filesystem type
  shell: lsblk -no FSTYPE {{ pv_device.stdout }} | awk '$1 != "LVM2_member" {print $1}'
  register: fs_type

# Expand storage to use all available space
- name: Update partition table
  command: partprobe {{ disk_name }}

- name: Grow the root partition
  command: growpart {{ disk_name }} {{ partition_number }}
  register: growpart_result
  failed_when: 
    - growpart_result.rc != 0 
    - "'NOCHANGE' not in growpart_result.stderr"
  changed_when: growpart_result.rc == 0

- name: Resize physical volume
  command: pvresize {{ pv_device.stdout }}
  when: growpart_result is changed

- name: Resize logical volume
  lvol:
    vg: "{{ vg_name.stdout }}"
    lv: "{{ lv_name.stdout }}"
    size: +100%FREE
  when: growpart_result is changed

- name: Resize filesystem
  filesystem:
    fstype: "{{ fs_type.stdout }}"
    dev: "{{ root_device.stdout }}"
    resizefs: true
  when: growpart_result is changed

# Gather updated disk info
- name: Get total disk size
  shell: lsblk -bno SIZE {{ pv_device.stdout }} | awk '{print $1/1024/1024/1024}'
  register: total_disk_size

- name: Get current LV size
  shell: lvs --noheadings --units b -o lv_size {{ root_device.stdout }} | awk '{print $1/1024/1024/1024}'
  register: current_lv_size

- name: Print updated disk info
  debug:
    msg: "{{ disk_name }}{{ partition_number }} now has {{ total_disk_size.stdout }} GB total disk space, with {{ current_lv_size.stdout }} GB allocated to the root partition"