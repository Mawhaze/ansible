---
- name: Check for existing join command in AWS SSM Parameter Store
  set_fact:
    ssm_join_command: "{{ lookup('aws_ssm', '/ansible/k8s/join-command', region='us-west-2', decrypt='true') }}"
  delegate_to: localhost
  register: ssm_join_result
  ignore_errors: true

# Enabled for testing new cluster creation
- name: DEBUG - Display ssm value
  debug:
    var: ssm_join_command
  when: ssm_join_result is succeeded

# Create a new cluster
- name: Initialize k8s controller
  become_user: sa-k8s
  block:
    - name: Validate new controller node
      find:
        paths: $HOME/.kube
        patterns: config
      register: kube_config_set

    - name: End playbook if controller is already configured
      fail:
        msg: "Controller is already configured"
      when: kube_config_set.matched > 0

    - name: Initialize Kubernetes cluster
      command: >
        sudo kubeadm init 
        --pod-network-cidr=10.244.0.0/16 
        --cri-socket unix:///var/run/cri-dockerd.sock

    - name: Create .kube directory
      file:
        path: $HOME/.kube
        state: directory
        mode: '0755'

    - name: Copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: $HOME/.kube/config
        remote_src: true

    - name: Install Flannel network plugin
      command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

    - name: Get join command
      command: kubeadm token create --print-join-command
      register: join_command

    - name: Get certificate key
      command: kubeadm init phase upload-certs --upload-certs
      register: certificate_key
 
    - name: DEBUG - Display join command
      debug:
        msg: 
          join_command: "{{ join_command.stdout }}"
          certificate_key: "{{ certificate_key.stdout }}"

    - name: Store join command in AWS SSM Parameter Store
      community.aws.ssm_parameter:
        name: "/ansible/k8s/join-command"
        value: "{{ join_command.stdout }}"
        string_type: SecureString

    - name: Store certificate key in AWS SSM Parameter Store
      community.aws.ssm_parameter:
        name: "/ansible/k8s/certificate-key"
        value: "{{ certificate_key.stdout }}"
        string_type: SecureString
  when: ssm_join_result is failed

# Join additional controllers
# - name: Join additional controller to the cluster
#   block:
#     - name: Retrieve join command from AWS SSM Parameter Store
#       set_fact:
#         join_command: "{{ ssm_join_command.parameters[0].value }}"

#     - name: Join the cluster as an additional controller
#       command: "{{ join_command }}"

#     - name: Debug - Display join controller command
#       debug:
#         var: join_command
#   when: not ssm_join_result is succeeded
